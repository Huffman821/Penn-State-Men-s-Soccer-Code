# ---- Soccer Player Synergy: Simple Coach-Facing Model ----

library(dplyr)
library(readr)

# ---- Load & Prepare Data ----
data <- read_csv("~/Downloads/player_totals.csv")

data <- data %>%
  mutate(
    goals_per90 = goals / minutes_played * 90,
    xg_per90 = xg / minutes_played * 90,
    shots_on_target_per90 = shots_on_target / minutes_played * 90,
    shots_total_per90 = shots_total / minutes_played * 90,
    assists_per90 = assists / minutes_played * 90,
    xa_per90 = xa / minutes_played * 90,
    touches_in_penalty_area_per90 = touches_in_penalty_area / minutes_played * 90,
    dribbles_successful_per90 = dribbles_successful / minutes_played * 90,
    key_passes_per90 = key_passes / minutes_played * 90,
    progressive_passes_accurate_per90 = progressive_passes_accurate / minutes_played * 90,
    passes_final_third_accurate_per90 = passes_final_third_accurate / minutes_played * 90,
    duels_won_per90 = duels_won / minutes_played * 90,
    defensive_duels_won_per90 = defensive_duels_won / minutes_played * 90,
    recoveries_opponent_half_per90 = recoveries_opponent_half / minutes_played * 90,
    interceptions_per90 = interceptions / minutes_played * 90,
    aerial_duels_won_per90 = aerial_duels_won / minutes_played * 90,
    clearances_per90 = clearances / minutes_played * 90,
    crosses_total_per90 = crosses_total / minutes_played * 90, 
    passes_total_per90 = passes_total / minutes_played * 90,
    progressive_passes_total_per90 = progressive_passes_total / minutes_played * 90,
    forward_passes_total_per90 = forward_passes_total / minutes_played * 90,
    dribbles_total_per90 = dribbles_total / minutes_played * 90,
    recoveries_total_per90 = recoveries_total / minutes_played * 90,
    duels_total_per90 = duels_total / minutes_played * 90
  )

# ---- Simple Projection Function ----
project_lineup <- function(df, players, minutes_default = 90) {
  lineup_data <- df %>% dplyr::filter(player %in% players)
  if (nrow(lineup_data) == 0) stop("No matching players found in data.")
  per90_cols <- grep("_per90$", names(lineup_data), value = TRUE)
  baseline_team <- lineup_data %>%
    summarise(across(all_of(per90_cols), mean, na.rm = TRUE))
  synergy_mult <- runif(1, 0.9, 1.1)  # simple synergy placeholder
  avg_minutes <- mean(lineup_data$minutes_played, na.rm = TRUE)
  minutes_factor <- avg_minutes / minutes_default
  projected_team_per90 <- baseline_team * synergy_mult * minutes_factor
  list(
    projected_team_per90 = projected_team_per90,
    synergy_mult = synergy_mult,
    avg_minutes = avg_minutes
  )
}

# ---- Example Usage ----
res1 <- project_lineup(data, players = c(
  "B. Liscum", "J. Sheridan", "M. Marshall", "M. Henderson",
  "M. Daouda", "F. Bell", "C. Grabfelder", "B. Nash", "B. Madore", "K. Phillip"
))

print("Synergy Multiplier:")
print(res1$synergy_mult)

print("Projected Team per90 Stats:")
print(res1$projected_team_per90)
